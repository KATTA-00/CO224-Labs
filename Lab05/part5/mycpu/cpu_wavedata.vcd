$date
	Tue Jun 06 21:06:26 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 & PCSELECT $end
$var wire 1 $ RESET $end
$var wire 1 ' ZERO $end
$var wire 1 ( WRITEENABLE $end
$var wire 1 ) WIRE1 $end
$var wire 1 * REVERSE $end
$var wire 8 + REGOUT2 [7:0] $end
$var wire 8 , REGOUT1 [7:0] $end
$var wire 32 - PC_TARGET [31:0] $end
$var wire 32 . PC_NEXT [31:0] $end
$var wire 32 / PC_4 [31:0] $end
$var wire 32 0 PC [31:0] $end
$var wire 8 1 OPCODE [7:0] $end
$var wire 1 2 MUXSELECT2 $end
$var wire 1 3 MUXSELECT1 $end
$var wire 8 4 MUXOUT2 [7:0] $end
$var wire 8 5 MUXOUT1 [7:0] $end
$var wire 1 6 JUMP $end
$var wire 8 7 IMMEDIATE [7:0] $end
$var wire 8 8 COMPOUT [7:0] $end
$var wire 2 9 BRANCH [1:0] $end
$var wire 8 : ALURESULT [7:0] $end
$var wire 8 ; ALUOUT [7:0] $end
$var wire 3 < ALUOP [2:0] $end
$var wire 8 = ALUIN1 [7:0] $end
$scope module Alu $end
$var wire 8 > sra_result [7:0] $end
$var wire 8 ? sl_result [7:0] $end
$var wire 8 @ ror_result [7:0] $end
$var wire 8 A or_result [7:0] $end
$var wire 8 B mult_result [7:0] $end
$var wire 8 C forward_result [7:0] $end
$var wire 8 D and_result [7:0] $end
$var wire 8 E add_result [7:0] $end
$var wire 1 ' ZERO $end
$var wire 3 F SELECT [0:2] $end
$var wire 8 G RESULT [7:0] $end
$var wire 8 H DATA2 [7:0] $end
$var wire 8 I DATA1 [7:0] $end
$upscope $end
$scope module Control_Unit $end
$var wire 8 J OPCODE [7:0] $end
$var reg 3 K ALUOP [2:0] $end
$var reg 2 L BRANCH [1:0] $end
$var reg 1 3 COMP_SELECT $end
$var reg 1 2 IMMEDIATE_SELECT $end
$var reg 1 6 JUMP $end
$var reg 1 * REVERSE $end
$var reg 1 ( WRITEENABLE $end
$upscope $end
$scope module Mux1 $end
$var wire 1 3 SELECT $end
$var wire 8 M DATA2 [7:0] $end
$var wire 8 N DATA1 [7:0] $end
$var reg 8 O OUTPUT [7:0] $end
$upscope $end
$scope module Mux2 $end
$var wire 8 P DATA1 [7:0] $end
$var wire 8 Q DATA2 [7:0] $end
$var wire 1 2 SELECT $end
$var reg 8 R OUTPUT [7:0] $end
$upscope $end
$scope module Mux3 $end
$var wire 1 & SELECT $end
$var wire 32 S DATA2 [31:0] $end
$var wire 32 T DATA1 [31:0] $end
$var reg 32 U OUTPUT [31:0] $end
$upscope $end
$scope module MuxBranch $end
$var wire 1 ' DATA1 $end
$var wire 2 V SELECT [1:0] $end
$var reg 1 ) OUTPUT $end
$upscope $end
$scope module Pc $end
$var wire 1 " CLK $end
$var wire 32 W PC_TO [31:0] $end
$var wire 1 $ RESET $end
$var wire 32 X PC_NEXT [31:0] $end
$var reg 32 Y PC [31:0] $end
$upscope $end
$scope module Pc_Adder $end
$var wire 32 Z DATA1 [31:0] $end
$var wire 8 [ DATA2 [7:0] $end
$var wire 32 \ RESULT [31:0] $end
$upscope $end
$scope module Reg_File $end
$var wire 1 " CLK $end
$var wire 3 ] INADDRESS [2:0] $end
$var wire 8 ^ OUT1 [7:0] $end
$var wire 3 _ OUT1ADDRESS [2:0] $end
$var wire 8 ` OUT2 [7:0] $end
$var wire 3 a OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ( WRITE $end
$var wire 8 b IN [7:0] $end
$upscope $end
$scope module Revers1 $end
$var wire 8 c DATA [7:0] $end
$var wire 1 * SELECT $end
$var reg 8 d OUTPUT [7:0] $end
$upscope $end
$scope module Revers2 $end
$var wire 8 e DATA [7:0] $end
$var wire 1 * SELECT $end
$var reg 8 f OUTPUT [7:0] $end
$upscope $end
$scope module Two_Com $end
$var wire 8 g DATA [7:0] $end
$var wire 8 h OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 i \registers[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 j \registers[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 k \registers[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 l \registers[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 m \registers[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 n \registers[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 o \registers[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 p \registers[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
x6
bx 5
bx 4
x3
x2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
x)
x(
x'
x&
bx %
1$
bx #
0"
bx !
$end
#4
1"
#5
b0 !
b0 0
b0 Y
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
0$
#6
b100 .
b100 U
b100 W
b100 /
b100 T
b100 X
b100 Z
#7
b1 7
b1 Q
b1 a
b0 _
b0 ]
b0 [
b0 1
b0 J
b1 #
b1 %
#8
0&
0)
b1 4
b1 H
b1 R
0*
b0 9
b0 L
b0 V
06
b0 <
b0 F
b0 K
12
03
1(
0"
#9
b1 :
b1 b
b1 f
b1 ;
b1 G
b1 e
b0 5
b0 O
b0 P
b0 =
b0 I
b0 d
bx1 A
b0x D
bx0 ?
b1 C
b0 +
b0 N
b0 `
b0 g
b0 ,
b0 ^
b0 c
b100 -
b100 S
b100 \
#10
b1 A
b0 D
b0 >
b0 ?
b0 @
b0 8
b0 M
b0 h
b0 B
#11
0'
b1 E
#12
1"
#13
b1 i
b100 !
b100 0
b100 Y
#14
b1000 .
b1000 U
b1000 W
b1000 /
b1000 T
b1000 X
b1000 Z
#15
b10 4
b10 H
b10 R
b10 7
b10 Q
b10 a
b1 ]
b1 [
b1 =
b1 I
b1 d
b10000000000000010 #
b10000000000000010 %
b1 ,
b1 ^
b1 c
#16
b10 :
b10 b
b10 f
b10 ;
b10 G
b10 e
b11 A
b10 C
b1000000 @
b100 ?
b0 >
0"
#17
b10 B
b1100 -
b1100 S
b1100 \
b11 E
#20
1"
#21
b1000 !
b1000 0
b1000 Y
b10 j
#22
b1100 .
b1100 U
b1100 W
b1100 /
b1100 T
b1100 X
b1100 Z
#23
b10 ]
b10 [
b1101 1
b1101 J
b1101000000100000000000000010 #
b1101000000100000000000000010 %
#24
b100 :
b100 b
b100 f
b100 ;
b100 G
b100 e
b101 <
b101 F
b101 K
0"
#25
b10100 -
b10100 S
b10100 \
#28
1"
#29
b100 k
b1100 !
b1100 0
b1100 Y
#30
b10000 .
b10000 U
b10000 W
b10000 /
b10000 T
b10000 X
b10000 Z
#31
b1 4
b1 H
b1 R
b1 7
b1 Q
b1 a
b10001 1
b10001 J
b100 5
b100 O
b100 P
b10001000000100000000000000001 #
b10001000000100000000000000001 %
b100 +
b100 N
b100 `
b100 g
#32
b11000 .
b11000 U
b11000 W
1&
b11 :
b11 b
b11 f
1)
b11111100 4
b11111100 H
b11111100 R
b11 ;
b11 G
b11 e
b11111100 5
b11111100 O
b11111100 P
b1 A
b1 D
b0 >
b10 ?
b10000000 @
b10 9
b10 L
b10 V
b1 <
b1 F
b1 K
02
13
0(
b1 C
b11111100 8
b11111100 M
b11111100 h
b11000 -
b11000 S
b11000 \
0"
#33
b11111101 A
b0 D
b10000 @
b0 ?
b0 >
b11111100 C
b10000001 B
b10 +
b10 N
b10 `
b10 g
#34
b11111110 4
b11111110 H
b11111110 R
b11111101 :
b11111101 b
b11111101 f
b11111110 5
b11111110 O
b11111110 P
b11111101 ;
b11111101 G
b11111101 e
b11111110 8
b11111110 M
b11111110 h
b11111101 E
#35
b11111111 A
b0 >
b0 ?
b100 @
b11111110 C
#36
b11111111 :
b11111111 b
b11111111 f
b11111111 ;
b11111111 G
b11111111 e
b11111110 B
b11111111 E
1"
#37
b11000 !
b11000 0
b11000 Y
#38
b11100 /
b11100 T
b11100 X
b11100 Z
#39
b100 7
b100 Q
b100 a
b100 ]
b100 [
b0 1
b0 J
b1000000000000000100 #
b1000000000000000100 %
#40
b11100 .
b11100 U
b11100 W
0&
b11111110 :
b11111110 b
b11111110 f
0)
b11111110 ;
b11111110 G
b11111110 e
b100 4
b100 H
b100 R
b10 5
b10 O
b10 P
b0 9
b0 L
b0 V
b0 <
b0 F
b0 K
12
03
1(
0"
#41
b100 :
b100 b
b100 f
b100 ;
b100 G
b100 e
b0 5
b0 O
b0 P
b101 A
b10000 @
b10000 ?
b0 >
b100 C
b0 +
b0 N
b0 `
b0 g
b101100 -
b101100 S
b101100 \
#42
b0 8
b0 M
b0 h
b100 B
b101 E
#44
1"
#45
b100 m
b11100 !
b11100 0
b11100 Y
#46
b100000 .
b100000 U
b100000 W
b100000 /
b100000 T
b100000 X
b100000 Z
#47
b10 4
b10 H
b10 R
b10 7
b10 Q
b10 a
b0 ]
b0 [
b100 5
b100 O
b100 P
b10 #
b10 %
b100 +
b100 N
b100 `
b100 g
#48
b10 :
b10 b
b10 f
b10 ;
b10 G
b10 e
b11 A
b0 >
b100 ?
b1000000 @
b10 C
b11111100 8
b11111100 M
b11111100 h
0"
#49
b10 B
b11 E
b100000 -
b100000 S
b100000 \
#52
1"
#53
b100000 !
b100000 0
b100000 Y
b10 i
#54
b100100 .
b100100 U
b100100 W
b100100 /
b100100 T
b100100 X
b100100 Z
#55
b1 4
b1 H
b1 R
b1 7
b1 Q
b1 a
b10 ]
b10 [
b10001 1
b10001 J
b10 =
b10 I
b10 d
b10001000000100000000000000001 #
b10001000000100000000000000001 %
b10 ,
b10 ^
b10 c
#56
b100000 .
b100000 U
b100000 W
1&
b11 :
b11 b
b11 f
1)
b11111100 4
b11111100 H
b11111100 R
b11111100 5
b11111100 O
b11111100 P
b11 ;
b11 G
b11 e
b1 C
b10 9
b10 L
b10 V
b1 <
b1 F
b1 K
02
13
0(
b1 @
b100 ?
b1 >
0"
#57
b101100 .
b101100 U
b101100 W
b11111110 A
b0 >
b0 ?
b100000 @
b11111100 C
b10000010 B
b10 +
b10 N
b10 `
b10 g
b101100 -
b101100 S
b101100 \
#58
b11111110 4
b11111110 H
b11111110 R
b11111110 :
b11111110 b
b11111110 f
b11111110 5
b11111110 O
b11111110 P
b11111110 ;
b11111110 G
b11111110 e
b11111110 8
b11111110 M
b11111110 h
b11111110 E
#59
b10 D
b1000 @
b0 ?
b0 >
b11111110 C
#60
b100100 .
b100100 U
b100100 W
0&
0)
b0 :
b0 b
b0 f
1'
b0 ;
b0 G
b0 e
b11111100 B
b0 E
1"
#61
b100100 !
b100100 0
b100100 Y
#62
b101000 .
b101000 U
b101000 W
b101000 /
b101000 T
b101000 X
b101000 Z
#63
b10 1
b10 J
b10000000100000000000000001 #
b10000000100000000000000001 %
#64
b10 4
b10 H
b10 R
b10 5
b10 O
b10 P
b0 9
b0 L
b0 V
03
1(
b110000 -
b110000 S
b110000 \
0"
#65
b10 A
b0 >
b1000 ?
b10000000 @
b10 C
#66
b100 :
b100 b
b100 f
0'
b100 ;
b100 G
b100 e
b100 B
b100 E
#68
1"
#69
b100 k
b101000 !
b101000 0
b101000 Y
#70
b101100 .
b101100 U
b101100 W
b101100 /
b101100 T
b101100 X
b101100 Z
#71
b100 7
b100 Q
b100 a
b10 _
b111 1
b111 J
b111000000100000001000000100 #
b111000000100000001000000100 %
#72
b11111110 4
b11111110 H
b11111110 R
b11111110 5
b11111110 O
b11111110 P
b1 9
b1 L
b1 V
13
0(
b110100 -
b110100 S
b110100 \
0"
#73
b100 =
b100 I
b100 d
b11111110 A
b1000 @
b0 ?
b0 >
b11111110 C
b100 +
b100 N
b100 `
b100 g
b100 ,
b100 ^
b100 c
#74
b11111100 4
b11111100 H
b11111100 R
b11111100 5
b11111100 O
b11111100 P
b100 D
b0 >
b0 ?
b10000 @
b11111100 8
b11111100 M
b11111100 h
b11111000 B
#75
b11111100 A
b1000000 @
b0 ?
b0 >
b11111100 C
#76
b110100 .
b110100 U
b110100 W
1&
1)
b0 :
b0 b
b0 f
1'
b0 ;
b0 G
b0 e
b11110000 B
b0 E
1"
#77
b110100 !
b110100 0
b110100 Y
#78
b111000 /
b111000 T
b111000 X
b111000 Z
#79
b1 7
b1 Q
b1 a
b0 _
b110 ]
b110 [
b100 1
b100 J
b100000001100000000000000001 #
b100000001100000000000000001 %
#80
b111000 .
b111000 U
b111000 W
0&
b100 :
b100 b
b100 f
b100 4
b100 H
b100 R
0)
b100 ;
b100 G
b100 e
b100 5
b100 O
b100 P
b0 9
b0 L
b0 V
b10 <
b10 F
b10 K
03
1(
0"
#81
b10 4
b10 H
b10 R
b10 5
b10 O
b10 P
b10 =
b10 I
b10 d
b100 A
b0 >
b1000000 ?
b1000000 @
b100 C
b10 +
b10 N
b10 `
b10 g
b10 ,
b10 ^
b10 c
b1010000 -
b1010000 S
b1010000 \
#82
b10 :
b10 b
b10 f
b10 ;
b10 G
b10 e
b10 C
b10 A
b10 D
b10000000 @
b1000 ?
b0 >
b11111110 8
b11111110 M
b11111110 h
b100 B
#83
0'
b100 E
#84
1"
#85
b10 o
b111000 !
b111000 0
b111000 Y
#86
b111100 .
b111100 U
b111100 W
b111100 /
b111100 T
b111100 X
b111100 Z
#87
bx 7
bx Q
bx a
bx _
bx ]
bx [
bx 1
bx J
bx #
bx %
#88
0"
#89
bx 4
bx H
bx R
bx 5
bx O
bx P
bx =
bx I
bx d
bx +
bx N
bx `
bx g
bx ,
bx ^
bx c
bx -
bx S
bx \
#90
bx :
bx b
bx f
bx ;
bx G
bx e
bx C
bx A
bx D
bx >
bx ?
bx @
bx 8
bx M
bx h
#91
x'
b0xxxxxxx B
bx E
#92
1"
#93
b111100 !
b111100 0
b111100 Y
#94
b1000000 .
b1000000 U
b1000000 W
b1000000 /
b1000000 T
b1000000 X
b1000000 Z
#96
0"
#100
1"
#101
b1000000 !
b1000000 0
b1000000 Y
#102
b1000100 .
b1000100 U
b1000100 W
b1000100 /
b1000100 T
b1000100 X
b1000100 Z
#104
0"
#108
1"
#109
b1000100 !
b1000100 0
b1000100 Y
#110
b1001000 .
b1001000 U
b1001000 W
b1001000 /
b1001000 T
b1001000 X
b1001000 Z
#112
0"
#116
1"
#117
b1001000 !
b1001000 0
b1001000 Y
#118
b1001100 .
b1001100 U
b1001100 W
b1001100 /
b1001100 T
b1001100 X
b1001100 Z
#120
0"
#124
1"
#125
b1001100 !
b1001100 0
b1001100 Y
#126
b1010000 .
b1010000 U
b1010000 W
b1010000 /
b1010000 T
b1010000 X
b1010000 Z
#128
0"
#132
1"
#133
b1010000 !
b1010000 0
b1010000 Y
#134
b1010100 .
b1010100 U
b1010100 W
b1010100 /
b1010100 T
b1010100 X
b1010100 Z
#136
0"
#140
1"
#141
b1010100 !
b1010100 0
b1010100 Y
#142
b1011000 .
b1011000 U
b1011000 W
b1011000 /
b1011000 T
b1011000 X
b1011000 Z
#144
0"
#148
1"
#149
b1011000 !
b1011000 0
b1011000 Y
#150
b1011100 .
b1011100 U
b1011100 W
b1011100 /
b1011100 T
b1011100 X
b1011100 Z
#152
0"
#155
