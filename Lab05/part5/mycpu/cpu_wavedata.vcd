$date
	Sun May 28 14:00:14 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 & PCSELECT $end
$var wire 1 $ RESET $end
$var wire 1 ' WIRE1 $end
$var wire 1 ( ZERO $end
$var wire 1 ) WRITEENABLE $end
$var wire 8 * REGOUT2 [7:0] $end
$var wire 8 + REGOUT1 [7:0] $end
$var wire 32 , PC_TARGET [31:0] $end
$var wire 32 - PC_NEXT [31:0] $end
$var wire 32 . PC_4 [31:0] $end
$var wire 32 / PC [31:0] $end
$var wire 8 0 OPCODE [7:0] $end
$var wire 1 1 MUXSELECT2 $end
$var wire 1 2 MUXSELECT1 $end
$var wire 8 3 MUXOUT2 [7:0] $end
$var wire 8 4 MUXOUT1 [7:0] $end
$var wire 1 5 JUMP $end
$var wire 8 6 IMMEDIATE [7:0] $end
$var wire 8 7 COMPOUT [7:0] $end
$var wire 1 8 BRANCH $end
$var wire 8 9 ALURESULT [7:0] $end
$var wire 3 : ALUOP [2:0] $end
$scope module Alu $end
$var wire 8 ; sra_result [7:0] $end
$var wire 8 < sl_result [7:0] $end
$var wire 8 = ror_result [7:0] $end
$var wire 8 > or_result [7:0] $end
$var wire 8 ? mult_result [7:0] $end
$var wire 8 @ forward_result [7:0] $end
$var wire 8 A and_result [7:0] $end
$var wire 8 B add_result [7:0] $end
$var wire 1 ( ZERO $end
$var wire 3 C SELECT [0:2] $end
$var wire 8 D RESULT [7:0] $end
$var wire 8 E DATA2 [7:0] $end
$var wire 8 F DATA1 [7:0] $end
$upscope $end
$scope module Control_Unit $end
$var wire 8 G OPCODE [7:0] $end
$var reg 3 H ALUOP [2:0] $end
$var reg 1 8 BRANCH $end
$var reg 1 2 COMP_SELECT $end
$var reg 1 1 IMMEDIATE_SELECT $end
$var reg 1 5 JUMP $end
$var reg 1 ) WRITEENABLE $end
$upscope $end
$scope module Mux1 $end
$var wire 1 2 SELECT $end
$var wire 8 I DATA2 [7:0] $end
$var wire 8 J DATA1 [7:0] $end
$var reg 8 K OUTPUT [7:0] $end
$upscope $end
$scope module Mux2 $end
$var wire 8 L DATA1 [7:0] $end
$var wire 8 M DATA2 [7:0] $end
$var wire 1 1 SELECT $end
$var reg 8 N OUTPUT [7:0] $end
$upscope $end
$scope module Mux3 $end
$var wire 1 & SELECT $end
$var wire 32 O DATA2 [31:0] $end
$var wire 32 P DATA1 [31:0] $end
$var reg 32 Q OUTPUT [31:0] $end
$upscope $end
$scope module Pc $end
$var wire 1 " CLK $end
$var wire 32 R PC_TO [31:0] $end
$var wire 1 $ RESET $end
$var wire 32 S PC_NEXT [31:0] $end
$var reg 32 T PC [31:0] $end
$upscope $end
$scope module Pc_Adder $end
$var wire 32 U DATA1 [31:0] $end
$var wire 8 V DATA2 [7:0] $end
$var wire 32 W RESULT [31:0] $end
$upscope $end
$scope module Reg_File $end
$var wire 1 " CLK $end
$var wire 8 X IN [7:0] $end
$var wire 3 Y INADDRESS [2:0] $end
$var wire 8 Z OUT1 [7:0] $end
$var wire 3 [ OUT1ADDRESS [2:0] $end
$var wire 8 \ OUT2 [7:0] $end
$var wire 3 ] OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ) WRITE $end
$upscope $end
$scope module Two_Com $end
$var wire 8 ^ DATA [7:0] $end
$var wire 8 _ OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 ` \registers[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 a \registers[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 b \registers[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 c \registers[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 d \registers[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 e \registers[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 f \registers[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 g \registers[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
bx 7
bx 6
x5
bx 4
bx 3
x2
x1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
x(
x'
x&
bx %
1$
bx #
0"
bx !
$end
#4
1"
#5
b0 !
b0 /
b0 T
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
0$
#6
b100 -
b100 Q
b100 R
b100 .
b100 P
b100 S
b100 U
#7
b11110000 6
b11110000 M
b0 ]
b0 [
b0 Y
b0 V
b0 0
b0 G
b11110000 #
b11110000 %
#8
0&
0'
b11110000 3
b11110000 E
b11110000 N
08
05
b0 :
b0 C
b0 H
11
02
1)
0"
#9
b11110000 9
b11110000 D
b11110000 X
b0 4
b0 K
b0 L
b1111xxxx >
bx0000 A
b0 =
b0 ;
b0 <
b11110000 @
b0 *
b0 J
b0 \
b0 ^
b0 +
b0 F
b0 Z
b100 ,
b100 O
b100 W
#10
b0 7
b0 I
b0 _
b11110000 >
b0 A
#11
0(
b0 ?
b11110000 B
#12
1"
#13
b11110000 `
b100 !
b100 /
b100 T
#14
b1000 -
b1000 Q
b1000 R
b1000 .
b1000 P
b1000 S
b1000 U
#15
b1001 3
b1001 E
b1001 N
b1001 6
b1001 M
b1 ]
b1 Y
b1 V
b11110000 4
b11110000 K
b11110000 L
b10000000000001001 #
b10000000000001001 %
b11110000 +
b11110000 F
b11110000 Z
b11110000 *
b11110000 J
b11110000 \
b11110000 ^
#16
b1001 9
b1001 D
b1001 X
b11111001 >
b1001 @
b11111111 ;
b1111000 =
b10000 7
b10000 I
b10000 _
0"
#17
b0 4
b0 K
b0 L
b1110000 ?
b0 *
b0 J
b0 \
b0 ^
b1100 ,
b1100 O
b1100 W
b11111001 B
#18
b0 7
b0 I
b0 _
#20
1"
#21
b1000 !
b1000 /
b1000 T
b1001 a
#22
b1100 -
b1100 Q
b1100 R
b1100 .
b1100 P
b1100 S
b1100 U
#23
b0 3
b0 E
b0 N
b0 6
b0 M
b0 ]
b1 [
b10 Y
b10 V
b1100 0
b1100 G
b1001 4
b1001 K
b1001 L
b1100000000100000000100000000 #
b1100000000100000000100000000 %
b1001 *
b1001 J
b1001 \
b1001 ^
#24
b1001 3
b1001 E
b1001 N
b1110000 9
b1110000 D
b1110000 X
b11110000 >
b11110000 =
b11110000 ;
b100 :
b100 C
b100 H
01
b11110000 <
b0 @
b11110111 7
b11110111 I
b11110111 _
0"
#25
b11110000 3
b11110000 E
b11110000 N
b11110000 4
b11110000 K
b11110000 L
b11111001 >
b0 ;
b10000100 =
b0 <
b1001 @
b11110000 *
b11110000 J
b11110000 \
b11110000 ^
b1001 +
b1001 F
b1001 Z
b10100 ,
b10100 O
b10100 W
#26
b1001 =
b0 ;
b11110000 @
b10000 7
b10000 I
b10000 _
#28
1"
#29
b1110000 b
b1100 !
b1100 /
b1100 T
#30
b10000 -
b10000 Q
b10000 R
b10000 .
b10000 P
b10000 S
b10000 U
#31
b10 6
b10 M
b10 ]
b0 [
b11 Y
b11 V
b1111 0
b1111 G
b1111000000110000000000000010 #
b1111000000110000000000000010 %
#32
b0 9
b0 D
b0 X
b10 3
b10 E
b10 N
b110 :
b110 C
b110 H
11
0"
#33
b11111100 9
b11111100 D
b11111100 X
b1110000 4
b1110000 K
b1110000 L
b1011 >
b11111100 ;
b111100 =
b100100 <
b10 @
b1110000 *
b1110000 J
b1110000 \
b1110000 ^
b11110000 +
b11110000 F
b11110000 Z
b11100 ,
b11100 O
b11100 W
#34
b10010000 7
b10010000 I
b10010000 _
b11110010 >
b11000000 <
#35
b11100000 ?
b11110010 B
#36
1"
#37
b10000 !
b10000 /
b10000 T
b11111100 c
#38
b10100 -
b10100 Q
b10100 R
b10100 .
b10100 P
b10100 S
b10100 U
#39
b1 3
b1 E
b1 N
b1 6
b1 M
b1 ]
b1 [
b100 Y
b100 V
b1110 0
b1110 G
b1110000001000000000100000001 #
b1110000001000000000100000001 %
#40
b11100000 9
b11100000 D
b11100000 X
b11110001 >
b1111000 =
b11111000 ;
b11100000 <
b1 @
b101 :
b101 C
b101 H
0"
#41
b1001 4
b1001 K
b1001 L
b11110000 ?
b11110001 B
b1001 *
b1001 J
b1001 \
b1001 ^
b1001 +
b1001 F
b1001 Z
b100100 ,
b100100 O
b100100 W
#42
b10010 9
b10010 D
b10010 X
b11110111 7
b11110111 I
b11110111 _
b1001 >
b1 A
b100 ;
b10000100 =
b10010 <
#43
b1001 ?
b1010 B
#44
1"
#45
b10010 d
b10100 !
b10100 /
b10100 T
#46
b11000 -
b11000 Q
b11000 R
b11000 .
b11000 P
b11000 S
b11000 U
#47
b11 3
b11 E
b11 N
b11 6
b11 M
b11 ]
b1101 0
b1101 G
b1101000001000000000100000011 #
b1101000001000000000100000011 %
#48
b1001000 9
b1001000 D
b1001000 X
b1011 >
b100001 =
b1 ;
b1001000 <
b11 @
b101000 ,
b101000 O
b101000 W
0"
#49
b11111100 4
b11111100 K
b11111100 L
b11011 ?
b1100 B
b11111100 *
b11111100 J
b11111100 \
b11111100 ^
#50
b100 7
b100 I
b100 _
#52
1"
#53
b11000 !
b11000 /
b11000 T
b1001000 d
#54
b11100 -
b11100 Q
b11100 R
b11100 .
b11100 P
b11100 S
b11100 U
#55
b10 3
b10 E
b10 N
b10 6
b10 M
b10 ]
b10000 0
b10000 G
b10000000001000000000100000010 #
b10000000001000000000100000010 %
#56
b1000010 9
b1000010 D
b1000010 X
b0 A
b10 ;
b1000010 =
b100100 <
b10 @
b111 :
b111 C
b111 H
b101100 ,
b101100 O
b101100 W
0"
#57
b1110000 4
b1110000 K
b1110000 L
b10010 ?
b1011 B
b1110000 *
b1110000 J
b1110000 \
b1110000 ^
#58
b10010000 7
b10010000 I
b10010000 _
#60
1"
#61
b1000010 d
b11100 !
b11100 /
b11100 T
#62
b100000 -
b100000 Q
b100000 R
b100000 .
b100000 P
b100000 S
b100000 U
#63
b11 3
b11 E
b11 N
b11 6
b11 M
b11 ]
b10 Y
b10 V
b10001 0
b10001 G
b10001000000100000000100000011 #
b10001000000100000000100000011 %
#64
b100001 9
b100001 D
b100001 X
b1 A
b100001 =
b1 ;
b1001000 <
b11 @
0"
#65
b11111100 4
b11111100 K
b11111100 L
b11011 ?
b1100 B
b11111100 *
b11111100 J
b11111100 \
b11111100 ^
b101000 ,
b101000 O
b101000 W
#66
b100 7
b100 I
b100 _
#68
1"
#69
b100000 !
b100000 /
b100000 T
b100001 b
#70
b100100 -
b100100 Q
b100100 R
b100100 .
b100100 P
b100100 S
b100100 U
#71
b1 3
b1 E
b1 N
b1 6
b1 M
b1 ]
b0 [
b1 0
b1 G
b1000000100000000000000001 #
b1000000100000000000000001 %
#72
b1 9
b1 D
b1 X
b11111100 3
b11111100 E
b11111100 N
b1001 >
b100 ;
b10000100 =
b10010 <
b1 @
b0 :
b0 C
b0 H
01
b101100 ,
b101100 O
b101100 W
0"
#73
b1001 3
b1001 E
b1001 N
b11111100 9
b11111100 D
b11111100 X
b1001 4
b1001 K
b1001 L
b11111101 >
b1000 A
b1111 =
b11111111 ;
b0 <
b11111100 @
b1001 *
b1001 J
b1001 \
b1001 ^
b11110000 +
b11110000 F
b11110000 Z
#74
b1001 9
b1001 D
b1001 X
b11111111 ;
b1111000 =
b1001 @
b11110111 7
b11110111 I
b11110111 _
b11111001 >
b0 A
#75
b1110000 ?
b11111001 B
#76
1"
#77
b1001 b
b100100 !
b100100 /
b100100 T
#78
b101000 -
b101000 Q
b101000 R
b101000 .
b101000 P
b101000 S
b101000 U
#79
b0 6
b0 M
b0 ]
b10 [
b11 Y
b11 V
b10 0
b10 G
b10000000110000001000000000 #
b10000000110000001000000000 %
#80
b11111001 9
b11111001 D
b11111001 X
b1 :
b1 C
b1 H
0"
#81
b11110000 3
b11110000 E
b11110000 N
b11110000 4
b11110000 K
b11110000 L
b11110000 *
b11110000 J
b11110000 \
b11110000 ^
b1001 +
b1001 F
b1001 Z
b110100 ,
b110100 O
b110100 W
#82
b11110000 @
b10000 7
b10000 I
b10000 _
b1001 =
b0 ;
#84
1"
#85
b101000 !
b101000 /
b101000 T
b11111001 c
#86
b101100 -
b101100 Q
b101100 R
b101100 .
b101100 P
b101100 S
b101100 U
#87
b1 6
b1 M
b1 ]
b11 [
b100 Y
b100 V
b11 0
b11 G
b11000001000000001100000001 #
b11000001000000001100000001 %
#88
b10000 3
b10000 E
b10000 N
b10000 4
b10000 K
b10000 L
12
0"
#89
b11001 >
b11111111 ;
b11111001 =
b10000 @
b1001 *
b1001 J
b1001 \
b1001 ^
b11111001 +
b11111001 F
b11111001 Z
b111100 ,
b111100 O
b111100 W
#90
b11110111 3
b11110111 E
b11110111 N
b11110111 4
b11110111 K
b11110111 L
b11110111 7
b11110111 I
b11110111 _
b11111001 >
b10000 A
b10010000 ?
#91
b11111111 >
b11110001 A
b11110011 =
b11111111 ;
b11110111 @
#92
b11110000 9
b11110000 D
b11110000 X
b111111 ?
b11110000 B
1"
#93
b11110000 d
b101100 !
b101100 /
b101100 T
#94
b110000 -
b110000 Q
b110000 R
b110000 .
b110000 P
b110000 S
b110000 U
#95
b1110101 6
b1110101 M
b101 ]
b0 [
b0 Y
b0 V
b0 0
b0 G
b1110101 #
b1110101 %
#96
b11110111 9
b11110111 D
b11110111 X
b1110101 3
b1110101 E
b1110101 N
b1001 4
b1001 K
b1001 L
b0 :
b0 C
b0 H
11
02
0"
#97
b1110101 9
b1110101 D
b1110101 X
b0 4
b0 K
b0 L
b11111101 >
b1110001 A
b11111111 ;
b10000111 =
b1110101 @
b0 *
b0 J
b0 \
b0 ^
b11110000 +
b11110000 F
b11110000 Z
b110000 ,
b110000 O
b110000 W
#98
b0 7
b0 I
b0 _
b11110101 >
b1110000 A
#99
b10110000 ?
b1100101 B
#100
1"
#101
b110000 !
b110000 /
b110000 T
b1110101 `
#102
b110100 -
b110100 Q
b110100 R
b110100 .
b110100 P
b110100 S
b110100 U
#103
b10010010 3
b10010010 E
b10010010 N
b10010010 6
b10010010 M
b10 ]
b1 Y
b1 V
b10000000010010010 #
b10000000010010010 %
b1110101 +
b1110101 F
b1110101 Z
#104
b10010010 9
b10010010 D
b10010010 X
b10010010 @
b11110111 >
b10000 A
b1011101 =
b0 ;
0"
#105
b1001 4
b1001 K
b1001 L
b1001 *
b1001 J
b1001 \
b1001 ^
b111000 ,
b111000 O
b111000 W
b10111010 ?
b111 B
#106
b11110111 7
b11110111 I
b11110111 _
#108
1"
#109
b10010010 a
b110100 !
b110100 /
b110100 T
#110
b111000 -
b111000 Q
b111000 R
b111000 .
b111000 P
b111000 S
b111000 U
#111
b0 3
b0 E
b0 N
b0 6
b0 M
b0 ]
b110 0
b110 G
b110000000010000000000000000 #
b110000000010000000000000000 %
#112
b111100 -
b111100 Q
b111100 R
b0 9
b0 D
b0 X
1&
b1001 3
b1001 E
b1001 N
b1110101 >
b0 A
b1110101 ;
b1110101 =
b1110101 <
b0 @
15
01
0)
b111100 ,
b111100 O
b111100 W
0"
#113
b1110101 3
b1110101 E
b1110101 N
b1001 9
b1001 D
b1001 X
b1110101 4
b1110101 K
b1110101 L
b1111101 >
b1 A
b10111010 =
b0 ;
b0 <
b1001 @
b1110101 *
b1110101 J
b1110101 \
b1110101 ^
#114
b1110101 9
b1110101 D
b1110101 X
b1110101 >
b1110101 A
b0 ;
b10101011 =
b1110101 @
b10001011 7
b10001011 I
b10001011 _
#115
b1111001 ?
b11101010 B
#116
1"
#117
b111100 !
b111100 /
b111100 T
#118
b1000000 .
b1000000 P
b1000000 S
b1000000 U
#119
b10 6
b10 M
b10 ]
b101 [
b110 Y
b110 V
b101 0
b101 G
b101000001100000010100000010 #
b101000001100000010100000010 %
#120
b1000000 -
b1000000 Q
b1000000 R
0&
05
b11 :
b11 C
b11 H
1)
0"
#121
b1001 3
b1001 E
b1001 N
b1001 4
b1001 K
b1001 L
b1001 *
b1001 J
b1001 \
b1001 ^
b0 +
b0 F
b0 Z
b1011000 ,
b1011000 O
b1011000 W
#122
b1001 9
b1001 D
b1001 X
b1001 >
b1001 @
b11110111 7
b11110111 I
b11110111 _
b0 A
b0 =
#123
b0 ?
b1001 B
#124
1"
#125
b1001 f
b1000000 !
b1000000 /
b1000000 T
#126
b1000100 -
b1000100 Q
b1000100 R
b1000100 .
b1000100 P
b1000100 S
b1000100 U
#127
b1 [
b101 Y
b101 V
b100 0
b100 G
b100000001010000000100000010 #
b100000001010000000100000010 %
#128
b0 9
b0 D
b0 X
b10 :
b10 C
b10 H
0"
#129
b10010010 +
b10010010 F
b10010010 Z
#130
b10011011 >
b11111111 ;
b1001001 =
#131
b100010 ?
b10011011 B
#132
1"
#133
b1000100 !
b1000100 /
b1000100 T
b0 e
#134
b1001000 -
b1001000 Q
b1001000 R
b1001000 .
b1001000 P
b1001000 S
b1001000 U
#135
bx 6
bx M
bx ]
bx [
bx Y
bx V
bx 0
bx G
bx #
bx %
#136
0"
#137
bx 3
bx E
bx N
bx 4
bx K
bx L
bx *
bx J
bx \
bx ^
bx +
bx F
bx Z
bx ,
bx O
bx W
#138
bx 9
bx D
bx X
bx <
bx @
bx 7
bx I
bx _
bx >
bx A
bx =
bx ;
#139
x(
bx ?
bx B
#140
1"
#141
b1001000 !
b1001000 /
b1001000 T
#142
b1001100 -
b1001100 Q
b1001100 R
b1001100 .
b1001100 P
b1001100 S
b1001100 U
#144
0"
#148
1"
#149
b1001100 !
b1001100 /
b1001100 T
#150
b1010000 -
b1010000 Q
b1010000 R
b1010000 .
b1010000 P
b1010000 S
b1010000 U
#152
0"
#155
