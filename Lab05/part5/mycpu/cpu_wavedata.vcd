$date
	Sat Jun 03 17:13:58 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 & PCSELECT $end
$var wire 1 $ RESET $end
$var wire 1 ' ZERO $end
$var wire 1 ( WRITEENABLE $end
$var wire 1 ) WIRE1 $end
$var wire 1 * SHIFT $end
$var wire 8 + REGOUT2 [7:0] $end
$var wire 8 , REGOUT1 [7:0] $end
$var wire 32 - PC_TARGET [31:0] $end
$var wire 32 . PC_NEXT [31:0] $end
$var wire 32 / PC_4 [31:0] $end
$var wire 32 0 PC [31:0] $end
$var wire 8 1 OPCODE [7:0] $end
$var wire 1 2 MUXSELECT2 $end
$var wire 1 3 MUXSELECT1 $end
$var wire 8 4 MUXOUT2 [7:0] $end
$var wire 8 5 MUXOUT1 [7:0] $end
$var wire 1 6 JUMP $end
$var wire 8 7 IMMEDIATE [7:0] $end
$var wire 8 8 COMPOUT [7:0] $end
$var wire 2 9 BRANCH [1:0] $end
$var wire 8 : ALURESULT [7:0] $end
$var wire 3 ; ALUOP [2:0] $end
$scope module Alu $end
$var wire 8 < sra_result [7:0] $end
$var wire 8 = sl_result [7:0] $end
$var wire 8 > ror_result [7:0] $end
$var wire 8 ? or_result [7:0] $end
$var wire 8 @ mult_result [7:0] $end
$var wire 8 A forward_result [7:0] $end
$var wire 8 B and_result [7:0] $end
$var wire 8 C add_result [7:0] $end
$var wire 1 ' ZERO $end
$var wire 1 * SHIFT $end
$var wire 3 D SELECT [0:2] $end
$var wire 8 E RESULT [7:0] $end
$var wire 8 F DATA2 [7:0] $end
$var wire 8 G DATA1 [7:0] $end
$upscope $end
$scope module Control_Unit $end
$var wire 8 H OPCODE [7:0] $end
$var reg 3 I ALUOP [2:0] $end
$var reg 2 J BRANCH [1:0] $end
$var reg 1 3 COMP_SELECT $end
$var reg 1 2 IMMEDIATE_SELECT $end
$var reg 1 6 JUMP $end
$var reg 1 * SHIFT $end
$var reg 1 ( WRITEENABLE $end
$upscope $end
$scope module Mux1 $end
$var wire 1 3 SELECT $end
$var wire 8 K DATA2 [7:0] $end
$var wire 8 L DATA1 [7:0] $end
$var reg 8 M OUTPUT [7:0] $end
$upscope $end
$scope module Mux2 $end
$var wire 8 N DATA1 [7:0] $end
$var wire 8 O DATA2 [7:0] $end
$var wire 1 2 SELECT $end
$var reg 8 P OUTPUT [7:0] $end
$upscope $end
$scope module Mux3 $end
$var wire 1 & SELECT $end
$var wire 32 Q DATA2 [31:0] $end
$var wire 32 R DATA1 [31:0] $end
$var reg 32 S OUTPUT [31:0] $end
$upscope $end
$scope module MuxBranch $end
$var wire 1 ' DATA1 $end
$var wire 2 T SELECT [1:0] $end
$var reg 1 ) OUTPUT $end
$upscope $end
$scope module Pc $end
$var wire 1 " CLK $end
$var wire 32 U PC_TO [31:0] $end
$var wire 1 $ RESET $end
$var wire 32 V PC_NEXT [31:0] $end
$var reg 32 W PC [31:0] $end
$upscope $end
$scope module Pc_Adder $end
$var wire 32 X DATA1 [31:0] $end
$var wire 8 Y DATA2 [7:0] $end
$var wire 32 Z RESULT [31:0] $end
$upscope $end
$scope module Reg_File $end
$var wire 1 " CLK $end
$var wire 8 [ IN [7:0] $end
$var wire 3 \ INADDRESS [2:0] $end
$var wire 8 ] OUT1 [7:0] $end
$var wire 3 ^ OUT1ADDRESS [2:0] $end
$var wire 8 _ OUT2 [7:0] $end
$var wire 3 ` OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ( WRITE $end
$upscope $end
$scope module Two_Com $end
$var wire 8 a DATA [7:0] $end
$var wire 8 b OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 c \registers[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 d \registers[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 e \registers[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 f \registers[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 g \registers[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 h \registers[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 i \registers[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 j \registers[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
x6
bx 5
bx 4
x3
x2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
x)
x(
x'
x&
bx %
1$
bx #
0"
bx !
$end
#4
1"
#5
b0 !
b0 0
b0 W
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
0$
#6
b100 .
b100 S
b100 U
b100 /
b100 R
b100 V
b100 X
#7
b10 7
b10 O
b10 `
b0 ^
b0 \
b0 Y
b0 1
b0 H
b10 #
b10 %
#8
0&
0)
b10 4
b10 F
b10 P
0*
b0 9
b0 J
b0 T
06
b0 ;
b0 D
b0 I
12
03
1(
0"
#9
b10 :
b10 E
b10 [
b0 5
b0 M
b0 N
bx1x ?
b0x0 B
b0 >
b0 <
b0 =
b10 A
b0 +
b0 L
b0 _
b0 a
b0 ,
b0 G
b0 ]
b100 -
b100 Q
b100 Z
#10
b0 8
b0 K
b0 b
b10 ?
b0 B
#11
0'
b0 @
b10 C
#12
1"
#13
b10 c
b100 !
b100 0
b100 W
#14
b1000 .
b1000 S
b1000 U
b1000 /
b1000 R
b1000 V
b1000 X
#15
b1000 4
b1000 F
b1000 P
b1000 7
b1000 O
b0 `
b1 \
b1 Y
b10000000000001000 #
b10000000000001000 %
b10 ,
b10 G
b10 ]
#16
b1000 :
b1000 E
b1000 [
b1010 ?
b1000 A
b0 <
b10 >
b0 =
0"
#17
b10 5
b10 M
b10 N
b10 +
b10 L
b10 _
b10 a
b1100 -
b1100 Q
b1100 Z
b10000 @
b1010 C
#18
b11111110 8
b11111110 K
b11111110 b
#20
1"
#21
b1000 !
b1000 0
b1000 W
b1000 d
#22
b1100 .
b1100 S
b1100 U
b1100 /
b1100 R
b1100 V
b1100 X
#23
b0 4
b0 F
b0 P
b0 7
b0 O
b1 ^
b100 \
b100 Y
b10001 1
b10001 H
b10001000001000000000100000000 #
b10001000001000000000100000000 %
#24
1&
1)
b1010 :
b1010 E
b1010 [
b11111110 4
b11111110 F
b11111110 P
b11111110 5
b11111110 M
b11111110 N
b10 ?
b10 <
b10 =
b0 A
b10 9
b10 J
b10 T
b1 ;
b1 D
b1 I
02
13
0(
0"
#25
b11100 .
b11100 S
b11100 U
b11111110 ?
b10 B
b0 <
b100000 >
b0 =
b11111110 A
b1000 ,
b1000 G
b1000 ]
b11100 -
b11100 Q
b11100 Z
#26
b1000 B
#27
b110 :
b110 E
b110 [
b11110000 @
b110 C
#28
1"
#29
b11100 !
b11100 0
b11100 W
#30
b100000 /
b100000 R
b100000 V
b100000 X
#31
b10 7
b10 O
b10 `
b10 \
b10 Y
b111 1
b111 H
b111000000100000000100000010 #
b111000000100000000100000010 %
#32
b100000 .
b100000 S
b100000 U
0&
0)
b1 9
b1 J
b1 T
0"
#33
b0 +
b0 L
b0 _
b0 a
b101000 -
b101000 Q
b101000 Z
#34
b0 4
b0 F
b0 P
b0 5
b0 M
b0 N
b0 8
b0 K
b0 b
#35
b1000 ?
b0 B
b1000 >
b1000 <
b1000 =
b0 A
#36
b1000 :
b1000 E
b1000 [
b0 @
b1000 C
1"
#37
b100000 !
b100000 0
b100000 W
#38
b100100 .
b100100 S
b100100 U
b100100 /
b100100 R
b100100 V
b100100 X
#39
b0 7
b0 O
b0 `
b1100 1
b1100 H
b1100000000100000000100000000 #
b1100000000100000000100000000 %
#40
b0 :
b0 E
b0 [
b0 9
b0 J
b0 T
b100 ;
b100 D
b100 I
03
1(
b101100 -
b101100 Q
b101100 Z
0"
#41
b10 4
b10 F
b10 P
b10 5
b10 M
b10 N
b10 +
b10 L
b10 _
b10 a
#42
b1010 ?
b10 <
b10 >
b10 =
b10 A
b11111110 8
b11111110 K
b11111110 b
#43
b10000 :
b10000 E
b10000 [
b10000 @
b1010 C
#44
1"
#45
b10000 e
b100100 !
b100100 0
b100100 W
#46
b101000 .
b101000 S
b101000 U
b101000 /
b101000 R
b101000 V
b101000 X
#47
b1 7
b1 O
b1 `
b0 ^
b1 1
b1 H
b1000000100000000000000001 #
b1000000100000000000000001 %
#48
b10 :
b10 E
b10 [
b0 ;
b0 D
b0 I
b110000 -
b110000 Q
b110000 Z
0"
#49
b1000 4
b1000 F
b1000 P
b1000 5
b1000 M
b1000 N
b1000 +
b1000 L
b1000 _
b1000 a
b10 ,
b10 G
b10 ]
#50
b1000 :
b1000 E
b1000 [
b1000 A
b11111000 8
b11111000 K
b11111000 b
b10 >
b0 <
b0 =
#52
1"
#53
b101000 !
b101000 0
b101000 W
b1000 e
#54
b101100 .
b101100 S
b101100 U
b101100 /
b101100 R
b101100 V
b101100 X
#55
b0 7
b0 O
b0 `
b10 ^
b11 \
b11 Y
b10 1
b10 H
b10000000110000001000000000 #
b10000000110000001000000000 %
#56
b1010 :
b1010 E
b1010 [
b1 ;
b1 D
b1 I
0"
#57
b10 4
b10 F
b10 P
b10 5
b10 M
b10 N
b10 +
b10 L
b10 _
b10 a
b1000 ,
b1000 G
b1000 ]
b111000 -
b111000 Q
b111000 Z
#58
b10 A
b11111110 8
b11111110 K
b11111110 b
b10 <
b10 >
b10 =
#60
1"
#61
b1010 f
b101100 !
b101100 0
b101100 W
#62
b110000 .
b110000 S
b110000 U
b110000 /
b110000 R
b110000 V
b110000 X
#63
b1 7
b1 O
b1 `
b11 ^
b100 \
b100 Y
b11 1
b11 H
b11000001000000001100000001 #
b11000001000000001100000001 %
#64
b11111110 4
b11111110 F
b11111110 P
b11111110 5
b11111110 M
b11111110 N
13
0"
#65
b11111110 ?
b1000 B
b101000 >
b0 <
b0 =
b11111110 A
b1000 +
b1000 L
b1000 _
b1000 a
b1010 ,
b1010 G
b1010 ]
b1000000 -
b1000000 Q
b1000000 Z
#66
b11111000 4
b11111000 F
b11111000 P
b11111000 5
b11111000 M
b11111000 N
b11111000 8
b11111000 K
b11111000 b
b1010 B
#67
b11111010 ?
b1000 B
b0 <
b1010 >
b0 =
b11111000 A
#68
b10 :
b10 E
b10 [
b10110000 @
b10 C
1"
#69
b110000 !
b110000 0
b110000 W
b10 g
#70
b110100 .
b110100 S
b110100 U
b110100 /
b110100 R
b110100 V
b110100 X
#71
b1110101 7
b1110101 O
b101 `
b0 ^
b0 \
b0 Y
b0 1
b0 H
b1110101 #
b1110101 %
#72
b11111000 :
b11111000 E
b11111000 [
b1110101 4
b1110101 F
b1110101 P
b1000 5
b1000 M
b1000 N
b0 ;
b0 D
b0 I
12
03
0"
#73
b1110101 :
b1110101 E
b1110101 [
b0 5
b0 M
b0 N
b1111111 ?
b0 B
b10000 >
b0 <
b0 =
b1110101 A
b0 +
b0 L
b0 _
b0 a
b10 ,
b10 G
b10 ]
b110100 -
b110100 Q
b110100 Z
#74
b0 8
b0 K
b0 b
b1110111 ?
#75
b11101010 @
b1110111 C
#76
1"
#77
b1110101 c
b110100 !
b110100 0
b110100 W
#78
b111000 .
b111000 S
b111000 U
b111000 /
b111000 R
b111000 V
b111000 X
#79
b10010010 4
b10010010 F
b10010010 P
b10010010 7
b10010010 O
b10 `
b1 \
b1 Y
b10000000010010010 #
b10000000010010010 %
b1110101 ,
b1110101 G
b1110101 ]
#80
b10010010 :
b10010010 E
b10010010 [
b10010010 A
b11110111 ?
b10000 B
b0 <
b1011101 >
b0 =
0"
#81
b1000 5
b1000 M
b1000 N
b1000 +
b1000 L
b1000 _
b1000 a
b111100 -
b111100 Q
b111100 Z
b10111010 @
b111 C
#82
b11111000 8
b11111000 K
b11111000 b
#84
1"
#85
b111000 !
b111000 0
b111000 W
b10010010 d
#86
b111100 .
b111100 S
b111100 U
b111100 /
b111100 R
b111100 V
b111100 X
#87
b0 4
b0 F
b0 P
b0 7
b0 O
b0 `
b1 ^
b101 \
b101 Y
b100 1
b100 H
b100000001010000000100000000 #
b100000001010000000100000000 %
#88
b0 :
b0 E
b0 [
b1000 4
b1000 F
b1000 P
b1110101 ?
b0 B
b1110101 >
b1110101 <
b1110101 =
b0 A
b10 ;
b10 D
b10 I
02
0"
#89
b1110101 4
b1110101 F
b1110101 P
b1110101 5
b1110101 M
b1110101 N
b1111101 ?
b11111111 <
b10010010 >
b0 =
b1000 A
b1110101 +
b1110101 L
b1110101 _
b1110101 a
b10010010 ,
b10010010 G
b10010010 ]
b1010000 -
b1010000 Q
b1010000 Z
#90
b10000 :
b10000 E
b10000 [
b10000 B
b10010100 >
b11111111 <
b0 =
b1110101 A
b10001011 8
b10001011 K
b10001011 b
b11110111 ?
#92
1"
#93
b10000 h
b111100 !
b111100 0
b111100 W
#94
b1000000 .
b1000000 S
b1000000 U
b1000000 /
b1000000 R
b1000000 V
b1000000 X
#95
b10 7
b10 O
b10 `
b101 ^
b110 \
b110 Y
b101 1
b101 H
b101000001100000010100000010 #
b101000001100000010100000010 %
#96
b11110111 :
b11110111 E
b11110111 [
b11 ;
b11 D
b11 I
0"
#97
b1000 4
b1000 F
b1000 P
b1000 5
b1000 M
b1000 N
b1000 +
b1000 L
b1000 _
b1000 a
b10000 ,
b10000 G
b10000 ]
b1011000 -
b1011000 Q
b1011000 Z
#98
b11000 :
b11000 E
b11000 [
b0 B
b1000 A
b11111000 8
b11111000 K
b11111000 b
b11000 ?
b0 <
b10000 >
b0 =
#99
b10000000 @
b11000 C
#100
1"
#101
b1000000 !
b1000000 0
b1000000 W
b11000 i
#102
b1000100 .
b1000100 S
b1000100 U
b1000100 /
b1000100 R
b1000100 V
b1000100 X
#103
b1 ^
b101 \
b101 Y
b100 1
b100 H
b100000001010000000100000010 #
b100000001010000000100000010 %
#104
b0 :
b0 E
b0 [
b10 ;
b10 D
b10 I
0"
#105
b10010010 ,
b10010010 G
b10010010 ]
#106
b10011010 ?
b10010010 >
b11111111 <
b0 =
#107
b10010000 @
b10011010 C
#108
1"
#109
b0 h
b1000100 !
b1000100 0
b1000100 W
#110
b1001000 .
b1001000 S
b1001000 U
b1001000 /
b1001000 R
b1001000 V
b1001000 X
#111
bx 7
bx O
bx `
bx ^
bx \
bx Y
bx 1
bx H
bx #
bx %
#112
0"
#113
bx 4
bx F
bx P
bx 5
bx M
bx N
bx +
bx L
bx _
bx a
bx ,
bx G
bx ]
bx -
bx Q
bx Z
#114
bx :
bx E
bx [
bx A
bx 8
bx K
bx b
bx ?
bx B
bx <
bx >
bx =
#115
x'
bx @
bx C
#116
1"
#117
b1001000 !
b1001000 0
b1001000 W
#118
b1001100 .
b1001100 S
b1001100 U
b1001100 /
b1001100 R
b1001100 V
b1001100 X
#120
0"
#124
1"
#125
b1001100 !
b1001100 0
b1001100 W
#126
b1010000 .
b1010000 S
b1010000 U
b1010000 /
b1010000 R
b1010000 V
b1010000 X
#128
0"
#132
1"
#133
b1010000 !
b1010000 0
b1010000 W
#134
b1010100 .
b1010100 S
b1010100 U
b1010100 /
b1010100 R
b1010100 V
b1010100 X
#136
0"
#140
1"
#141
b1010100 !
b1010100 0
b1010100 W
#142
b1011000 .
b1011000 S
b1011000 U
b1011000 /
b1011000 R
b1011000 V
b1011000 X
#144
0"
#148
1"
#149
b1011000 !
b1011000 0
b1011000 W
#150
b1011100 .
b1011100 S
b1011100 U
b1011100 /
b1011100 R
b1011100 V
b1011100 X
#152
0"
#155
