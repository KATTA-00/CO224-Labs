$date
	Sat Jun 03 17:01:20 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 & NOTZERO $end
$var wire 1 ' PCSELECT $end
$var wire 1 $ RESET $end
$var wire 1 ( ZERO $end
$var wire 1 ) WRITEENABLE $end
$var wire 1 * WIRE1 $end
$var wire 1 + SHIFT $end
$var wire 8 , REGOUT2 [7:0] $end
$var wire 8 - REGOUT1 [7:0] $end
$var wire 32 . PC_TARGET [31:0] $end
$var wire 32 / PC_NEXT [31:0] $end
$var wire 32 0 PC_4 [31:0] $end
$var wire 32 1 PC [31:0] $end
$var wire 8 2 OPCODE [7:0] $end
$var wire 1 3 MUXSELECT2 $end
$var wire 1 4 MUXSELECT1 $end
$var wire 8 5 MUXOUT2 [7:0] $end
$var wire 8 6 MUXOUT1 [7:0] $end
$var wire 1 7 JUMP $end
$var wire 8 8 IMMEDIATE [7:0] $end
$var wire 8 9 COMPOUT [7:0] $end
$var wire 2 : BRANCH [1:0] $end
$var wire 8 ; ALURESULT [7:0] $end
$var wire 3 < ALUOP [2:0] $end
$scope module Alu $end
$var wire 8 = sra_result [7:0] $end
$var wire 8 > sl_result [7:0] $end
$var wire 8 ? ror_result [7:0] $end
$var wire 8 @ or_result [7:0] $end
$var wire 8 A mult_result [7:0] $end
$var wire 8 B forward_result [7:0] $end
$var wire 8 C and_result [7:0] $end
$var wire 8 D add_result [7:0] $end
$var wire 1 ( ZERO $end
$var wire 1 + SHIFT $end
$var wire 3 E SELECT [0:2] $end
$var wire 8 F RESULT [7:0] $end
$var wire 8 G DATA2 [7:0] $end
$var wire 8 H DATA1 [7:0] $end
$upscope $end
$scope module Control_Unit $end
$var wire 8 I OPCODE [7:0] $end
$var reg 3 J ALUOP [2:0] $end
$var reg 2 K BRANCH [1:0] $end
$var reg 1 4 COMP_SELECT $end
$var reg 1 3 IMMEDIATE_SELECT $end
$var reg 1 7 JUMP $end
$var reg 1 + SHIFT $end
$var reg 1 ) WRITEENABLE $end
$upscope $end
$scope module Mux1 $end
$var wire 1 4 SELECT $end
$var wire 8 L DATA2 [7:0] $end
$var wire 8 M DATA1 [7:0] $end
$var reg 8 N OUTPUT [7:0] $end
$upscope $end
$scope module Mux2 $end
$var wire 8 O DATA1 [7:0] $end
$var wire 8 P DATA2 [7:0] $end
$var wire 1 3 SELECT $end
$var reg 8 Q OUTPUT [7:0] $end
$upscope $end
$scope module Mux3 $end
$var wire 1 ' SELECT $end
$var wire 32 R DATA2 [31:0] $end
$var wire 32 S DATA1 [31:0] $end
$var reg 32 T OUTPUT [31:0] $end
$upscope $end
$scope module MuxBranch $end
$var wire 1 ( DATA1 $end
$var wire 1 & DATA2 $end
$var wire 2 U SELECT [1:0] $end
$var reg 1 * OUTPUT $end
$upscope $end
$scope module Pc $end
$var wire 1 " CLK $end
$var wire 32 V PC_TO [31:0] $end
$var wire 1 $ RESET $end
$var wire 32 W PC_NEXT [31:0] $end
$var reg 32 X PC [31:0] $end
$upscope $end
$scope module Pc_Adder $end
$var wire 32 Y DATA1 [31:0] $end
$var wire 8 Z DATA2 [7:0] $end
$var wire 32 [ RESULT [31:0] $end
$upscope $end
$scope module Reg_File $end
$var wire 1 " CLK $end
$var wire 8 \ IN [7:0] $end
$var wire 3 ] INADDRESS [2:0] $end
$var wire 8 ^ OUT1 [7:0] $end
$var wire 3 _ OUT1ADDRESS [2:0] $end
$var wire 8 ` OUT2 [7:0] $end
$var wire 3 a OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ) WRITE $end
$upscope $end
$scope module Two_Com $end
$var wire 8 b DATA [7:0] $end
$var wire 8 c OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 d \registers[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 e \registers[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 f \registers[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 g \registers[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 h \registers[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 i \registers[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 j \registers[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 k \registers[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
x7
bx 6
bx 5
x4
x3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
x*
x)
x(
x'
x&
bx %
1$
bx #
0"
bx !
$end
#4
1"
#5
b0 !
b0 1
b0 X
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
0$
#6
b100 /
b100 T
b100 V
b100 0
b100 S
b100 W
b100 Y
#7
b10 8
b10 P
b10 a
b0 _
b0 ]
b0 Z
b0 2
b0 I
b10 #
b10 %
#8
0'
0*
b10 5
b10 G
b10 Q
0+
b0 :
b0 K
b0 U
07
b0 <
b0 E
b0 J
13
04
1)
0"
#9
b10 ;
b10 F
b10 \
b0 6
b0 N
b0 O
bx1x @
b0x0 C
b0 ?
b0 =
b0 >
b10 B
b0 ,
b0 M
b0 `
b0 b
b0 -
b0 H
b0 ^
b100 .
b100 R
b100 [
#10
b0 9
b0 L
b0 c
b10 @
b0 C
#11
1&
0(
b0 A
b10 D
#12
1"
#13
b10 d
b100 !
b100 1
b100 X
#14
b1000 /
b1000 T
b1000 V
b1000 0
b1000 S
b1000 W
b1000 Y
#15
b1000 5
b1000 G
b1000 Q
b1000 8
b1000 P
b0 a
b1 ]
b1 Z
b10000000000001000 #
b10000000000001000 %
b10 -
b10 H
b10 ^
#16
b1000 ;
b1000 F
b1000 \
b1010 @
b1000 B
b0 =
b10 ?
b0 >
0"
#17
b10 6
b10 N
b10 O
b10 ,
b10 M
b10 `
b10 b
b1100 .
b1100 R
b1100 [
b10000 A
b1010 D
#18
b11111110 9
b11111110 L
b11111110 c
#20
1"
#21
b1000 !
b1000 1
b1000 X
b1000 e
#22
b1100 /
b1100 T
b1100 V
b1100 0
b1100 S
b1100 W
b1100 Y
#23
b1 5
b1 G
b1 Q
b1 8
b1 P
b1 a
b10 ]
b10 Z
b100000000000000001 #
b100000000000000001 %
#24
b1 ;
b1 F
b1 \
b11 @
b1 ?
b1 =
b1 >
b1 B
0"
#25
b1000 6
b1000 N
b1000 O
b10 A
b11 D
b1000 ,
b1000 M
b1000 `
b1000 b
b10100 .
b10100 R
b10100 [
#26
b11111000 9
b11111000 L
b11111000 c
#28
1"
#29
b1 f
b1100 !
b1100 1
b1100 X
#30
b10000 /
b10000 T
b10000 V
b10000 0
b10000 S
b10000 W
b10000 Y
#31
b11 5
b11 G
b11 Q
b11 8
b11 P
b11 a
b10 _
b11 ]
b11 Z
b1101 2
b1101 I
b1101000000110000001000000011 #
b1101000000110000001000000011 %
#32
b10000 ;
b10000 F
b10000 \
b10 C
b0 =
b1000000 ?
b10000 >
b11 B
1+
b101 <
b101 E
b101 J
0"
#33
b0 6
b0 N
b0 O
b110 A
b101 D
b0 ,
b0 M
b0 `
b0 b
b1 -
b1 H
b1 ^
b11100 .
b11100 R
b11100 [
#34
b1000 ;
b1000 F
b1000 \
b0 9
b0 L
b0 c
b1 C
b100000 ?
b0 =
b1000 >
#35
b11 A
b100 D
#36
1"
#37
b10000 !
b10000 1
b10000 X
b1000 g
#38
b10100 /
b10100 T
b10100 V
b10100 0
b10100 S
b10100 W
b10100 Y
#39
b10 5
b10 G
b10 Q
b10 8
b10 P
b10 a
b1 _
b100 ]
b100 Z
b1110 2
b1110 I
b1000 6
b1000 N
b1000 O
b1110000001000000000100000010 #
b1110000001000000000100000010 %
b1000 ,
b1000 M
b1000 `
b1000 b
#40
b0 ;
b0 F
b0 \
b0 C
b0 =
b1000000 ?
b0 >
0+
b10 B
b11111000 9
b11111000 L
b11111000 c
0"
#41
b1 6
b1 N
b1 O
b10 A
b11 D
b1 ,
b1 M
b1 `
b1 b
b1000 -
b1000 H
b1000 ^
b100100 .
b100100 R
b100100 [
#42
b10 ;
b10 F
b10 \
b11111111 9
b11111111 L
b11111111 c
b1010 @
b10 ?
b10 =
b10 >
#43
b10000 A
b1010 D
#44
1"
#45
b10 h
b10100 !
b10100 1
b10100 X
#46
b11000 /
b11000 T
b11000 V
b11000 0
b11000 S
b11000 W
b11000 Y
#47
b0 5
b0 G
b0 Q
b0 8
b0 P
b0 a
b0 _
b10 ]
b10 Z
b110 2
b110 I
b110000000100000000000000000 #
b110000000100000000000000000 %
#48
b100100 /
b100100 T
b100100 V
1'
b0 ;
b0 F
b0 \
b1 5
b1 G
b1 Q
b1000 @
b1000 =
b1000 ?
b1000 >
b0 B
17
b0 <
b0 E
b0 J
03
0)
0"
#49
b10 5
b10 G
b10 Q
b1 ;
b1 F
b1 \
b10 6
b10 N
b10 O
b100000 /
b100000 T
b100000 V
b1001 @
b1 ?
b1 =
b1 >
b1 B
b10 ,
b10 M
b10 `
b10 b
b10 -
b10 H
b10 ^
b100000 .
b100000 R
b100000 [
#50
b10 ;
b10 F
b10 \
b10 C
b0 =
b10000000 ?
b0 >
b10 B
b11111110 9
b11111110 L
b11111110 c
b10 @
#51
b100 A
b100 D
#52
1"
#53
b100000 !
b100000 1
b100000 X
#54
b100100 0
b100100 S
b100100 W
b100100 Y
#55
b1 _
b1100 2
b1100 I
b1100000000100000000100000000 #
b1100000000100000000100000000 %
#56
0'
b100 ;
b100 F
b100 \
b100100 /
b100100 T
b100100 V
07
b100 <
b100 E
b100 J
1)
b101100 .
b101100 R
b101100 [
0"
#57
b1000 -
b1000 H
b1000 ^
#58
b1010 @
b0 C
b10 ?
b10 =
b10 >
#59
b10000 ;
b10000 F
b10000 \
b10000 A
b1010 D
#60
1"
#61
b10000 f
b100100 !
b100100 1
b100100 X
#62
b101000 /
b101000 T
b101000 V
b101000 0
b101000 S
b101000 W
b101000 Y
#63
b1 8
b1 P
b1 a
b0 _
b1 2
b1 I
b1000000100000000000000001 #
b1000000100000000000000001 %
#64
b10 ;
b10 F
b10 \
b0 <
b0 E
b0 J
b110000 .
b110000 R
b110000 [
0"
#65
b1000 5
b1000 G
b1000 Q
b1000 6
b1000 N
b1000 O
b1000 ,
b1000 M
b1000 `
b1000 b
b10 -
b10 H
b10 ^
#66
b1000 ;
b1000 F
b1000 \
b1000 B
b11111000 9
b11111000 L
b11111000 c
b0 =
b10 ?
b0 >
#68
1"
#69
b101000 !
b101000 1
b101000 X
b1000 f
#70
b101100 /
b101100 T
b101100 V
b101100 0
b101100 S
b101100 W
b101100 Y
#71
b0 8
b0 P
b0 a
b10 _
b11 ]
b11 Z
b10 2
b10 I
b10000000110000001000000000 #
b10000000110000001000000000 %
#72
b1010 ;
b1010 F
b1010 \
b1 <
b1 E
b1 J
0"
#73
b10 5
b10 G
b10 Q
b10 6
b10 N
b10 O
b10 ,
b10 M
b10 `
b10 b
b1000 -
b1000 H
b1000 ^
b111000 .
b111000 R
b111000 [
#74
b10 B
b11111110 9
b11111110 L
b11111110 c
b10 ?
b10 =
b10 >
#76
1"
#77
b1010 g
b101100 !
b101100 1
b101100 X
#78
b110000 /
b110000 T
b110000 V
b110000 0
b110000 S
b110000 W
b110000 Y
#79
b1 8
b1 P
b1 a
b11 _
b100 ]
b100 Z
b11 2
b11 I
b11000001000000001100000001 #
b11000001000000001100000001 %
#80
b11111110 5
b11111110 G
b11111110 Q
b11111110 6
b11111110 N
b11111110 O
14
0"
#81
b11111110 @
b1000 C
b0 =
b101000 ?
b0 >
b11111110 B
b1000 ,
b1000 M
b1000 `
b1000 b
b1010 -
b1010 H
b1010 ^
b1000000 .
b1000000 R
b1000000 [
#82
b11111000 5
b11111000 G
b11111000 Q
b11111000 6
b11111000 N
b11111000 O
b11111000 9
b11111000 L
b11111000 c
b1010 C
#83
b11111010 @
b1000 C
b1010 ?
b0 =
b0 >
b11111000 B
#84
b10 ;
b10 F
b10 \
b10110000 A
b10 D
1"
#85
b110000 !
b110000 1
b110000 X
b10 h
#86
b110100 /
b110100 T
b110100 V
b110100 0
b110100 S
b110100 W
b110100 Y
#87
b1110101 8
b1110101 P
b101 a
b0 _
b0 ]
b0 Z
b0 2
b0 I
b1110101 #
b1110101 %
#88
b11111000 ;
b11111000 F
b11111000 \
b1110101 5
b1110101 G
b1110101 Q
b1000 6
b1000 N
b1000 O
b0 <
b0 E
b0 J
13
04
0"
#89
b1110101 ;
b1110101 F
b1110101 \
b0 6
b0 N
b0 O
b1111111 @
b0 C
b0 =
b10000 ?
b0 >
b1110101 B
b0 ,
b0 M
b0 `
b0 b
b10 -
b10 H
b10 ^
b110100 .
b110100 R
b110100 [
#90
b0 9
b0 L
b0 c
b1110111 @
#91
b11101010 A
b1110111 D
#92
1"
#93
b1110101 d
b110100 !
b110100 1
b110100 X
#94
b111000 /
b111000 T
b111000 V
b111000 0
b111000 S
b111000 W
b111000 Y
#95
b10010010 5
b10010010 G
b10010010 Q
b10010010 8
b10010010 P
b10 a
b1 ]
b1 Z
b10000000010010010 #
b10000000010010010 %
b1110101 -
b1110101 H
b1110101 ^
#96
b10010010 ;
b10010010 F
b10010010 \
b10010010 B
b11110111 @
b10000 C
b1011101 ?
b0 =
b0 >
0"
#97
b1000 6
b1000 N
b1000 O
b1000 ,
b1000 M
b1000 `
b1000 b
b111100 .
b111100 R
b111100 [
b10111010 A
b111 D
#98
b11111000 9
b11111000 L
b11111000 c
#100
1"
#101
b111000 !
b111000 1
b111000 X
b10010010 e
#102
b111100 /
b111100 T
b111100 V
b111100 0
b111100 S
b111100 W
b111100 Y
#103
b0 5
b0 G
b0 Q
b0 8
b0 P
b0 a
b1 _
b101 ]
b101 Z
b100 2
b100 I
b100000001010000000100000000 #
b100000001010000000100000000 %
#104
b0 ;
b0 F
b0 \
b1000 5
b1000 G
b1000 Q
b1110101 @
b0 C
b1110101 =
b1110101 ?
b1110101 >
b0 B
b10 <
b10 E
b10 J
03
0"
#105
b1110101 5
b1110101 G
b1110101 Q
b1110101 6
b1110101 N
b1110101 O
b1111101 @
b10010010 ?
b11111111 =
b0 >
b1000 B
b1110101 ,
b1110101 M
b1110101 `
b1110101 b
b10010010 -
b10010010 H
b10010010 ^
b1010000 .
b1010000 R
b1010000 [
#106
b10000 ;
b10000 F
b10000 \
b10000 C
b11111111 =
b10010100 ?
b0 >
b1110101 B
b10001011 9
b10001011 L
b10001011 c
b11110111 @
#108
1"
#109
b10000 i
b111100 !
b111100 1
b111100 X
#110
b1000000 /
b1000000 T
b1000000 V
b1000000 0
b1000000 S
b1000000 W
b1000000 Y
#111
b10 8
b10 P
b10 a
b101 _
b110 ]
b110 Z
b101 2
b101 I
b101000001100000010100000010 #
b101000001100000010100000010 %
#112
b11110111 ;
b11110111 F
b11110111 \
b11 <
b11 E
b11 J
0"
#113
b1000 5
b1000 G
b1000 Q
b1000 6
b1000 N
b1000 O
b1000 ,
b1000 M
b1000 `
b1000 b
b10000 -
b10000 H
b10000 ^
b1011000 .
b1011000 R
b1011000 [
#114
b11000 ;
b11000 F
b11000 \
b0 C
b1000 B
b11111000 9
b11111000 L
b11111000 c
b11000 @
b10000 ?
b0 =
b0 >
#115
b10000000 A
b11000 D
#116
1"
#117
b1000000 !
b1000000 1
b1000000 X
b11000 j
#118
b1000100 /
b1000100 T
b1000100 V
b1000100 0
b1000100 S
b1000100 W
b1000100 Y
#119
b1 _
b101 ]
b101 Z
b100 2
b100 I
b100000001010000000100000010 #
b100000001010000000100000010 %
#120
b0 ;
b0 F
b0 \
b10 <
b10 E
b10 J
0"
#121
b10010010 -
b10010010 H
b10010010 ^
#122
b10011010 @
b11111111 =
b10010010 ?
b0 >
#123
b10010000 A
b10011010 D
#124
1"
#125
b0 i
b1000100 !
b1000100 1
b1000100 X
#126
b1001000 /
b1001000 T
b1001000 V
b1001000 0
b1001000 S
b1001000 W
b1001000 Y
#127
bx 8
bx P
bx a
bx _
bx ]
bx Z
bx 2
bx I
bx #
bx %
#128
0"
#129
bx 5
bx G
bx Q
bx 6
bx N
bx O
bx ,
bx M
bx `
bx b
bx -
bx H
bx ^
bx .
bx R
bx [
#130
bx ;
bx F
bx \
bx B
bx 9
bx L
bx c
bx @
bx C
bx ?
bx =
bx >
#131
x&
x(
bx A
bx D
#132
1"
#133
b1001000 !
b1001000 1
b1001000 X
#134
b1001100 /
b1001100 T
b1001100 V
b1001100 0
b1001100 S
b1001100 W
b1001100 Y
#136
0"
#140
1"
#141
b1001100 !
b1001100 1
b1001100 X
#142
b1010000 /
b1010000 T
b1010000 V
b1010000 0
b1010000 S
b1010000 W
b1010000 Y
#144
0"
#148
1"
#149
b1010000 !
b1010000 1
b1010000 X
#150
b1010100 /
b1010100 T
b1010100 V
b1010100 0
b1010100 S
b1010100 W
b1010100 Y
#152
0"
#155
