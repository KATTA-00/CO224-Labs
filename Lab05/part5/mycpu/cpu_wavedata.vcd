$date
	Tue Jun 06 17:14:44 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 & PCSELECT $end
$var wire 1 $ RESET $end
$var wire 1 ' ZERO $end
$var wire 1 ( WRITEENABLE $end
$var wire 1 ) WIRE1 $end
$var wire 1 * SHIFT $end
$var wire 8 + REGOUT2 [7:0] $end
$var wire 8 , REGOUT1 [7:0] $end
$var wire 32 - PC_TARGET [31:0] $end
$var wire 32 . PC_NEXT [31:0] $end
$var wire 32 / PC_4 [31:0] $end
$var wire 32 0 PC [31:0] $end
$var wire 8 1 OPCODE [7:0] $end
$var wire 1 2 MUXSELECT2 $end
$var wire 1 3 MUXSELECT1 $end
$var wire 8 4 MUXOUT2 [7:0] $end
$var wire 8 5 MUXOUT1 [7:0] $end
$var wire 1 6 JUMP $end
$var wire 8 7 IMMEDIATE [7:0] $end
$var wire 8 8 COMPOUT [7:0] $end
$var wire 2 9 BRANCH [1:0] $end
$var wire 8 : ALURESULT [7:0] $end
$var wire 8 ; ALUOUT [7:0] $end
$var wire 3 < ALUOP [2:0] $end
$var wire 8 = ALUIN1 [7:0] $end
$scope module Alu $end
$var wire 8 > sra_result [7:0] $end
$var wire 8 ? sl_result [7:0] $end
$var wire 8 @ ror_result [7:0] $end
$var wire 8 A or_result [7:0] $end
$var wire 8 B mult_result [7:0] $end
$var wire 8 C forward_result [7:0] $end
$var wire 8 D and_result [7:0] $end
$var wire 8 E add_result [7:0] $end
$var wire 1 ' ZERO $end
$var wire 3 F SELECT [0:2] $end
$var wire 8 G RESULT [7:0] $end
$var wire 8 H DATA2 [7:0] $end
$var wire 8 I DATA1 [7:0] $end
$upscope $end
$scope module Control_Unit $end
$var wire 8 J OPCODE [7:0] $end
$var reg 3 K ALUOP [2:0] $end
$var reg 2 L BRANCH [1:0] $end
$var reg 1 3 COMP_SELECT $end
$var reg 1 2 IMMEDIATE_SELECT $end
$var reg 1 6 JUMP $end
$var reg 1 * SHIFT $end
$var reg 1 ( WRITEENABLE $end
$upscope $end
$scope module Mux1 $end
$var wire 1 3 SELECT $end
$var wire 8 M DATA2 [7:0] $end
$var wire 8 N DATA1 [7:0] $end
$var reg 8 O OUTPUT [7:0] $end
$upscope $end
$scope module Mux2 $end
$var wire 8 P DATA1 [7:0] $end
$var wire 8 Q DATA2 [7:0] $end
$var wire 1 2 SELECT $end
$var reg 8 R OUTPUT [7:0] $end
$upscope $end
$scope module Mux3 $end
$var wire 1 & SELECT $end
$var wire 32 S DATA2 [31:0] $end
$var wire 32 T DATA1 [31:0] $end
$var reg 32 U OUTPUT [31:0] $end
$upscope $end
$scope module MuxBranch $end
$var wire 1 ' DATA1 $end
$var wire 2 V SELECT [1:0] $end
$var reg 1 ) OUTPUT $end
$upscope $end
$scope module Mux_Revers1 $end
$var wire 1 * SELECT $end
$var wire 8 W DATA [7:0] $end
$var reg 8 X OUTPUT [7:0] $end
$upscope $end
$scope module Mux_Revers2 $end
$var wire 8 Y DATA [7:0] $end
$var wire 1 * SELECT $end
$var reg 8 Z OUTPUT [7:0] $end
$upscope $end
$scope module Pc $end
$var wire 1 " CLK $end
$var wire 32 [ PC_TO [31:0] $end
$var wire 1 $ RESET $end
$var wire 32 \ PC_NEXT [31:0] $end
$var reg 32 ] PC [31:0] $end
$upscope $end
$scope module Pc_Adder $end
$var wire 32 ^ DATA1 [31:0] $end
$var wire 8 _ DATA2 [7:0] $end
$var wire 32 ` RESULT [31:0] $end
$upscope $end
$scope module Reg_File $end
$var wire 1 " CLK $end
$var wire 8 a IN [7:0] $end
$var wire 3 b INADDRESS [2:0] $end
$var wire 8 c OUT1 [7:0] $end
$var wire 3 d OUT1ADDRESS [2:0] $end
$var wire 8 e OUT2 [7:0] $end
$var wire 3 f OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 ( WRITE $end
$upscope $end
$scope module Two_Com $end
$var wire 8 g DATA [7:0] $end
$var wire 8 h OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 i \registers[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 j \registers[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 k \registers[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 l \registers[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 m \registers[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 n \registers[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 o \registers[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module Reg_File $end
$var reg 8 p \registers[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
x6
bx 5
bx 4
x3
x2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
x*
x)
x(
x'
x&
bx %
1$
bx #
0"
bx !
$end
#4
1"
#5
b0 !
b0 0
b0 ]
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
0$
#6
b100 .
b100 U
b100 [
b100 /
b100 T
b100 \
b100 ^
#7
b1 7
b1 Q
b1 f
b0 d
b0 b
b0 _
b0 1
b0 J
b1 #
b1 %
#8
0&
0)
b1 4
b1 H
b1 R
0*
b0 9
b0 L
b0 V
06
b0 <
b0 F
b0 K
12
03
1(
0"
#9
b1 :
b1 Z
b1 a
b1 ;
b1 G
b1 Y
b0 5
b0 O
b0 P
b0 =
b0 I
b0 X
bx1 A
b0x D
bx0 ?
b1 C
b0 +
b0 N
b0 e
b0 g
b0 ,
b0 W
b0 c
b100 -
b100 S
b100 `
#10
b1 A
b0 D
b0 >
b0 ?
b0 @
b0 8
b0 M
b0 h
b0 B
#11
0'
b1 E
#12
1"
#13
b1 i
b100 !
b100 0
b100 ]
#14
b1000 .
b1000 U
b1000 [
b1000 /
b1000 T
b1000 \
b1000 ^
#15
b10 4
b10 H
b10 R
b10 7
b10 Q
b10 f
b1 b
b1 _
b1 =
b1 I
b1 X
b10000000000000010 #
b10000000000000010 %
b1 ,
b1 W
b1 c
#16
b10 :
b10 Z
b10 a
b10 ;
b10 G
b10 Y
b11 A
b10 C
b1000000 @
b100 ?
b0 >
0"
#17
b10 B
b1100 -
b1100 S
b1100 `
b11 E
#20
1"
#21
b1000 !
b1000 0
b1000 ]
b10 j
#22
b1100 .
b1100 U
b1100 [
b1100 /
b1100 T
b1100 \
b1100 ^
#23
b1 d
b0 b
b0 _
b10001 1
b10001 J
b10001000000000000000100000010 #
b10001000000000000000100000010 %
#24
1&
b11 :
b11 Z
b11 a
1)
b11 ;
b11 G
b11 Y
b0 4
b0 H
b0 R
b10 9
b10 L
b10 V
b1 <
b1 F
b1 K
02
13
0(
0"
#25
b10 =
b10 I
b10 X
b1 A
b1 >
b1 ?
b1 @
b0 C
b10 ,
b10 W
b10 c
#26
b10 A
b10 @
b10 ?
b10 >
b0 B
#27
b10 :
b10 Z
b10 a
b10 ;
b10 G
b10 Y
b10 E
#28
1"
#29
b1100 !
b1100 0
b1100 ]
#30
b10000 /
b10000 T
b10000 \
b10000 ^
#31
b11 b
b11 _
b1111 1
b1111 J
b1111000000110000000100000010 #
b1111000000110000000100000010 %
#32
b10000 .
b10000 U
b10000 [
0&
0)
b10 4
b10 H
b10 R
b0 9
b0 L
b0 V
b110 <
b110 F
b110 K
12
03
1(
0"
#33
b0 :
b0 Z
b0 a
b0 ;
b0 G
b0 Y
b10 D
b0 >
b1000 ?
b10000000 @
b10 C
b11100 -
b11100 S
b11100 `
#34
b100 B
b100 E
#36
1"
#37
b0 l
b10000 !
b10000 0
b10000 ]
#38
b10100 .
b10100 U
b10100 [
b10100 /
b10100 T
b10100 \
b10100 ^
#39
b10000 4
b10000 H
b10000 R
b10000 7
b10000 Q
b0 f
b0 d
b0 1
b0 J
b110000000000010000 #
b110000000000010000 %
#40
b10000 :
b10000 Z
b10000 a
b10000 ;
b10000 G
b10000 Y
b10010 A
b0 D
b10 @
b0 ?
b0 >
b10000 C
b0 <
b0 F
b0 K
b100000 -
b100000 S
b100000 `
0"
#41
b1 5
b1 O
b1 P
b1 =
b1 I
b1 X
b100000 B
b10010 E
b1 +
b1 N
b1 e
b1 g
b1 ,
b1 W
b1 c
#42
b10001 A
b0 >
b0 ?
b1 @
b11111111 8
b11111111 M
b11111111 h
#43
b10000 B
b10001 E
#44
1"
#45
b10100 !
b10100 0
b10100 ]
b10000 l
#46
b11000 .
b11000 U
b11000 [
b11000 /
b11000 T
b11000 \
b11000 ^
#47
b100 4
b100 H
b100 R
b100 7
b100 Q
b100 f
b100 b
b100 _
b1000000000000000100 #
b1000000000000000100 %
#48
b100 :
b100 Z
b100 a
b100 ;
b100 G
b100 Y
b101 A
b10000 @
b10000 ?
b0 >
b100 C
0"
#49
b0 5
b0 O
b0 P
b100 B
b101 E
b0 +
b0 N
b0 e
b0 g
b101000 -
b101000 S
b101000 `
#50
b0 8
b0 M
b0 h
#52
1"
#53
b100 m
b11000 !
b11000 0
b11000 ]
#54
b11100 .
b11100 U
b11100 [
b11100 /
b11100 T
b11100 \
b11100 ^
#55
b10 4
b10 H
b10 R
b10 7
b10 Q
b10 f
b0 b
b0 _
b100 5
b100 O
b100 P
b10 #
b10 %
b100 +
b100 N
b100 e
b100 g
#56
b10 :
b10 Z
b10 a
b10 ;
b10 G
b10 Y
b11 A
b0 >
b100 ?
b1000000 @
b10 C
b11111100 8
b11111100 M
b11111100 h
0"
#57
b0 5
b0 O
b0 P
b10 B
b11 E
b0 +
b0 N
b0 e
b0 g
b11100 -
b11100 S
b11100 `
#58
b0 8
b0 M
b0 h
#60
1"
#61
b11100 !
b11100 0
b11100 ]
b10 i
#62
b100000 .
b100000 U
b100000 [
b100000 /
b100000 T
b100000 \
b100000 ^
#63
b1 d
b10001 1
b10001 J
b10 =
b10 I
b10 X
b10001000000000000000100000010 #
b10001000000000000000100000010 %
b10 ,
b10 W
b10 c
#64
1&
b11 :
b11 Z
b11 a
1)
b0 4
b0 H
b0 R
b11 ;
b11 G
b11 Y
b10 9
b10 L
b10 V
b1 <
b1 F
b1 K
02
13
0(
b10 A
b10 D
b10000000 @
b1000 ?
b0 >
b100000 -
b100000 S
b100000 `
0"
#65
b0 D
b10 >
b10 ?
b10 @
b0 C
b0 B
#66
b10 :
b10 Z
b10 a
b10 ;
b10 G
b10 Y
b10 E
#68
1"
#69
b100000 !
b100000 0
b100000 ]
#70
b100100 /
b100100 T
b100100 \
b100100 ^
#71
b1 7
b1 Q
b1 f
b0 d
b10 b
b10 _
b10 1
b10 J
b10000000100000000000000001 #
b10000000100000000000000001 %
#72
b100100 .
b100100 U
b100100 [
0&
0)
b0 9
b0 L
b0 V
03
1(
0"
#73
b10 4
b10 H
b10 R
b10 5
b10 O
b10 P
b10 +
b10 N
b10 e
b10 g
b101100 -
b101100 S
b101100 `
#74
b10 D
b10000000 @
b1000 ?
b0 >
b10 C
b11111110 8
b11111110 M
b11111110 h
#75
b100 :
b100 Z
b100 a
b100 ;
b100 G
b100 Y
b100 B
b100 E
#76
1"
#77
b100 k
b100100 !
b100100 0
b100100 ]
#78
b101000 .
b101000 U
b101000 [
b101000 /
b101000 T
b101000 \
b101000 ^
#79
b10 7
b10 Q
b10 f
b100 d
b111 1
b111 J
b111000000100000010000000010 #
b111000000100000010000000010 %
#80
b11111110 4
b11111110 H
b11111110 R
b11111110 5
b11111110 O
b11111110 P
b1 9
b1 L
b1 V
13
0(
b110000 -
b110000 S
b110000 `
0"
#81
b100 =
b100 I
b100 X
b11111110 A
b0 >
b0 ?
b1000 @
b11111110 C
b100 +
b100 N
b100 e
b100 g
b100 ,
b100 W
b100 c
#82
b11111100 4
b11111100 H
b11111100 R
b11111100 5
b11111100 O
b11111100 P
b100 D
b10000 @
b0 ?
b0 >
b11111100 8
b11111100 M
b11111100 h
b11111000 B
#83
b11111100 A
b0 >
b0 ?
b1000000 @
b11111100 C
#84
b110000 .
b110000 U
b110000 [
1&
1)
b0 :
b0 Z
b0 a
1'
b0 ;
b0 G
b0 Y
b11110000 B
b0 E
1"
#85
b110000 !
b110000 0
b110000 ]
#86
b110100 /
b110100 T
b110100 \
b110100 ^
#87
b1 7
b1 Q
b1 f
b0 d
b110 b
b110 _
b100 1
b100 J
b100000001100000000000000001 #
b100000001100000000000000001 %
#88
b110100 .
b110100 U
b110100 [
0&
b100 :
b100 Z
b100 a
b100 4
b100 H
b100 R
0)
b100 ;
b100 G
b100 Y
b100 5
b100 O
b100 P
b0 9
b0 L
b0 V
b10 <
b10 F
b10 K
03
1(
0"
#89
b10 4
b10 H
b10 R
b10 5
b10 O
b10 P
b10 =
b10 I
b10 X
b100 A
b1000000 @
b1000000 ?
b0 >
b100 C
b10 +
b10 N
b10 e
b10 g
b10 ,
b10 W
b10 c
b1001100 -
b1001100 S
b1001100 `
#90
b10 :
b10 Z
b10 a
b10 ;
b10 G
b10 Y
b10 C
b10 A
b10 D
b0 >
b1000 ?
b10000000 @
b11111110 8
b11111110 M
b11111110 h
b100 B
#91
0'
b100 E
#92
1"
#93
b10 o
b110100 !
b110100 0
b110100 ]
#94
b111000 .
b111000 U
b111000 [
b111000 /
b111000 T
b111000 \
b111000 ^
#95
bx 7
bx Q
bx f
bx d
bx b
bx _
bx 1
bx J
bx #
bx %
#96
0"
#97
bx 4
bx H
bx R
bx 5
bx O
bx P
bx =
bx I
bx X
bx +
bx N
bx e
bx g
bx ,
bx W
bx c
bx -
bx S
bx `
#98
bx :
bx Z
bx a
bx ;
bx G
bx Y
bx C
bx A
bx D
bx @
bx ?
bx >
bx 8
bx M
bx h
#99
x'
b0xxxxxxx B
bx E
#100
1"
#101
b111000 !
b111000 0
b111000 ]
#102
b111100 .
b111100 U
b111100 [
b111100 /
b111100 T
b111100 \
b111100 ^
#104
0"
#108
1"
#109
b111100 !
b111100 0
b111100 ]
#110
b1000000 .
b1000000 U
b1000000 [
b1000000 /
b1000000 T
b1000000 \
b1000000 ^
#112
0"
#116
1"
#117
b1000000 !
b1000000 0
b1000000 ]
#118
b1000100 .
b1000100 U
b1000100 [
b1000100 /
b1000100 T
b1000100 \
b1000100 ^
#120
0"
#124
1"
#125
b1000100 !
b1000100 0
b1000100 ]
#126
b1001000 .
b1001000 U
b1001000 [
b1001000 /
b1001000 T
b1001000 \
b1001000 ^
#128
0"
#132
1"
#133
b1001000 !
b1001000 0
b1001000 ]
#134
b1001100 .
b1001100 U
b1001100 [
b1001100 /
b1001100 T
b1001100 \
b1001100 ^
#136
0"
#140
1"
#141
b1001100 !
b1001100 0
b1001100 ]
#142
b1010000 .
b1010000 U
b1010000 [
b1010000 /
b1010000 T
b1010000 \
b1010000 ^
#144
0"
#148
1"
#149
b1010000 !
b1010000 0
b1010000 ]
#150
b1010100 .
b1010100 U
b1010100 [
b1010100 /
b1010100 T
b1010100 \
b1010100 ^
#152
0"
#155
